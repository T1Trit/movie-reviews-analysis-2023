"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏.
–°–æ–∑–¥–∞–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–æ–≤, –¥–∏–∞–≥—Ä–∞–º–º –∏ –æ–±–ª–∞–∫–æ–≤ —Å–ª–æ–≤.
"""

import asyncio
from aiogram import Router, F
from aiogram.types import Message, BufferedInputFile, InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.filters import Command
from loguru import logger

# –ò–º–ø–æ—Ä—Ç —Å–µ—Ä–≤–∏—Å–æ–≤
import sys
from pathlib import Path
sys.path.insert(0, str(Path(__file__).parent.parent.parent))

from config import get_config
from bot.services.sentiment_service import get_sentiment_service
from bot.services.visualization_service import get_visualization_service

# –°–æ–∑–¥–∞–Ω–∏–µ —Ä–æ—É—Ç–µ—Ä–∞
visualization_router = Router()

@visualization_router.message(Command("chart"))
async def cmd_chart(message: Message):
    """–ö–æ–º–∞–Ω–¥–∞ —Å–æ–∑–¥–∞–Ω–∏—è –≥—Ä–∞—Ñ–∏–∫–æ–≤."""
    command_parts = message.text.split()
    
    if len(command_parts) < 3:
        await message.answer(
            "‚ùå <b>–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã</b>\\n\\n"
            "<b>–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:</b> /chart <ID> <—Ç–∏–ø>\\n\\n"
            "<b>–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–∏–ø—ã –≥—Ä–∞—Ñ–∏–∫–æ–≤:</b>\\n"
            "‚Ä¢ sentiment - –≥—Ä–∞—Ñ–∏–∫ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–π\\n"
            "‚Ä¢ ratings - —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –æ—Ü–µ–Ω–æ–∫\\n"
            "‚Ä¢ summary - —Å–≤–æ–¥–Ω—ã–π –∞–Ω–∞–ª–∏–∑\\n\\n"
            "<b>–ü—Ä–∏–º–µ—Ä—ã:</b>\\n"
            "/chart 1318972 sentiment\\n"
            "/chart 1318972 ratings\\n"
            "/chart 1318972 summary"
        )
        return
    
    try:
        movie_id = int(command_parts[1])
        chart_type = command_parts[2].lower()
    except ValueError:
        await message.answer("‚ùå ID —Ñ–∏–ª—å–º–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º")
        return
    
    if chart_type not in ['sentiment', 'ratings', 'summary']:
        await message.answer(
            "‚ùå <b>–ù–µ–≤–µ—Ä–Ω—ã–π —Ç–∏–ø –≥—Ä–∞—Ñ–∏–∫–∞</b>\\n\\n"
            "–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–∏–ø—ã: sentiment, ratings, summary"
        )
        return
    
    logger.info(f"–°–æ–∑–¥–∞–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–∞ {chart_type} –¥–ª—è —Ñ–∏–ª—å–º–∞ {movie_id}")
    
    # –°–æ–æ–±—â–µ–Ω–∏–µ –æ —Å–æ–∑–¥–∞–Ω–∏–∏ –≥—Ä–∞—Ñ–∏–∫–∞
    chart_msg = await message.answer(
        f"üìä <b>–°–æ–∑–¥–∞–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–∞: {chart_type}</b>\\n"
        f"üé¨ –§–∏–ª—å–º ID: {movie_id}\\n\\n"
        "‚è≥ –ì–µ–Ω–µ—Ä–∏—Ä—É—é –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—é...\\n"
        "<i>–≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥</i>"
    )
    
    try:
        await create_and_send_chart(chart_msg, movie_id, chart_type)
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –≥—Ä–∞—Ñ–∏–∫–∞ {chart_type} –¥–ª—è {movie_id}: {e}")
        await chart_msg.edit_text(
            f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –≥—Ä–∞—Ñ–∏–∫–∞\\n"
            f"–¢–∏–ø: {chart_type}, ID: {movie_id}\\n\\n"
            "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–∞–Ω–Ω—ã–µ —Ñ–∏–ª—å–º–∞."
        )

@visualization_router.message(Command("wordcloud"))
async def cmd_wordcloud(message: Message):
    """–ö–æ–º–∞–Ω–¥–∞ —Å–æ–∑–¥–∞–Ω–∏—è –æ–±–ª–∞–∫–∞ —Å–ª–æ–≤."""
    command_parts = message.text.split()
    
    if len(command_parts) < 2:
        await message.answer(
            "‚ùå <b>–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã</b>\\n\\n"
            "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /wordcloud <ID —Ñ–∏–ª—å–º–∞>\\n"
            "–ü—Ä–∏–º–µ—Ä: /wordcloud 1318972"
        )
        return
    
    try:
        movie_id = int(command_parts[1])
    except ValueError:
        await message.answer("‚ùå ID —Ñ–∏–ª—å–º–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º")
        return
    
    logger.info(f"–°–æ–∑–¥–∞–Ω–∏–µ –æ–±–ª–∞–∫–∞ —Å–ª–æ–≤ –¥–ª—è —Ñ–∏–ª—å–º–∞ {movie_id}")
    
    wordcloud_msg = await message.answer(
        f"‚òÅÔ∏è <b>–°–æ–∑–¥–∞–Ω–∏–µ –æ–±–ª–∞–∫–∞ —Å–ª–æ–≤</b>\\n"
        f"üé¨ –§–∏–ª—å–º ID: {movie_id}\\n\\n"
        "‚è≥ –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –æ—Ç–∑—ã–≤—ã –∏ —Å–æ–∑–¥–∞—é –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—é...\\n"
        "<i>–≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –¥–æ 30 —Å–µ–∫—É–Ω–¥</i>"
    )
    
    try:
        await create_and_send_wordcloud(wordcloud_msg, movie_id)
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –æ–±–ª–∞–∫–∞ —Å–ª–æ–≤ –¥–ª—è {movie_id}: {e}")
        await wordcloud_msg.edit_text(
            f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –æ–±–ª–∞–∫–∞ —Å–ª–æ–≤\\n"
            f"ID —Ñ–∏–ª—å–º–∞: {movie_id}\\n\\n"
            "–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:\\n"
            "‚Ä¢ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö\\n"
            "‚Ä¢ –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ—Ç–∑—ã–≤—ã –¥–ª—è —Ñ–∏–ª—å–º–∞\\n"
            "‚Ä¢ –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã"
        )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ callback –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≥—Ä–∞—Ñ–∏–∫–æ–≤
@visualization_router.callback_query(F.data.startswith("chart_"))
async def callback_chart(callback):
    """Callback –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ç–∏–ø–∞ –≥—Ä–∞—Ñ–∏–∫–∞."""
    # –§–æ—Ä–º–∞—Ç: chart_movieid_type
    parts = callback.data.split("_")
    if len(parts) != 3:
        await callback.answer("–û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ –∫–æ–º–∞–Ω–¥—ã")
        return
    
    movie_id = int(parts[1])
    chart_type = parts[2]
    
    await callback.message.edit_text(
        f"üìä <b>–°–æ–∑–¥–∞–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–∞: {chart_type}</b>\\n"
        f"üé¨ –§–∏–ª—å–º ID: {movie_id}\\n\\n"
        "‚è≥ –ì–µ–Ω–µ—Ä–∏—Ä—É—é –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—é..."
    )
    
    try:
        await create_and_send_chart(callback.message, movie_id, chart_type)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –≥—Ä–∞—Ñ–∏–∫–∞ —á–µ—Ä–µ–∑ callback: {e}")
        await callback.message.edit_text("‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –≥—Ä–∞—Ñ–∏–∫–∞")
    
    await callback.answer()

# –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–π

async def create_and_send_chart(message: Message, movie_id: int, chart_type: str):
    """–°–æ–∑–¥–∞–Ω–∏–µ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ –≥—Ä–∞—Ñ–∏–∫–∞."""
    config = get_config()
    sentiment_service = get_sentiment_service(config)
    viz_service = get_visualization_service(config)
    
    # –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Ñ–∏–ª—å–º–∞
    movie_analysis = sentiment_service.get_movie_sentiment_stats(movie_id)
    
    if not movie_analysis:
        await message.edit_text(
            f"üòî <b>–î–∞–Ω–Ω—ã–µ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≥—Ä–∞—Ñ–∏–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</b>\\n"
            f"ID —Ñ–∏–ª—å–º–∞: {movie_id}\\n\\n"
            "–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:\\n"
            "‚Ä¢ –§–∏–ª—å–º –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö\\n"
            "‚Ä¢ –ù–µ—Ç –æ—Ç–∑—ã–≤–æ–≤ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞\\n"
            "‚Ä¢ –ù–µ–≤–µ—Ä–Ω—ã–π ID —Ñ–∏–ª—å–º–∞"
        )
        return
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞
    chart_buffer = None
    chart_name = ""
    
    if chart_type == "sentiment":
        # –ì—Ä–∞—Ñ–∏–∫ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–π
        sentiment_distribution = sentiment_service.get_sentiment_distribution(movie_id)
        if sentiment_distribution:
            chart_buffer = viz_service.create_sentiment_pie_chart(
                sentiment_distribution, 
                movie_analysis.movie_title
            )
            chart_name = "–≥—Ä–∞—Ñ–∏–∫ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–π"
    
    elif chart_type == "ratings":
        # –ì—Ä–∞—Ñ–∏–∫ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ä–µ–π—Ç–∏–Ω–≥–æ–≤ (–∑–∞–≥–ª—É—à–∫–∞ - –Ω—É–∂–Ω—ã —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ)
        if hasattr(movie_analysis, 'ratings') and movie_analysis.ratings:
            chart_buffer = viz_service.create_rating_distribution(
                movie_analysis.ratings,
                movie_analysis.movie_title
            )
            chart_name = "–≥—Ä–∞—Ñ–∏–∫ —Ä–µ–π—Ç–∏–Ω–≥–æ–≤"
        else:
            # –°–æ–∑–¥–∞–µ–º –≥—Ä–∞—Ñ–∏–∫ –Ω–∞ –æ—Å–Ω–æ–≤–µ sentiment scores
            chart_buffer = viz_service.create_sentiment_bar_chart(
                movie_analysis.sentiment_scores,
                movie_analysis.movie_title
            )
            chart_name = "–≥—Ä–∞—Ñ–∏–∫ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–π"
    
    elif chart_type == "summary":
        # –°–≤–æ–¥–Ω—ã–π –¥–∞—à–±–æ—Ä–¥
        movie_data = {
            'sentiment_distribution': sentiment_distribution := sentiment_service.get_sentiment_distribution(movie_id),
            'sentiment_scores': movie_analysis.sentiment_scores,
            'total_reviews': movie_analysis.total_reviews,
            'avg_rating': movie_analysis.avg_rating,
            'avg_sentiment': sum(movie_analysis.sentiment_scores) / len(movie_analysis.sentiment_scores) if movie_analysis.sentiment_scores else 0
        }
        
        chart_buffer = viz_service.create_summary_dashboard(
            movie_data,
            movie_analysis.movie_title
        )
        chart_name = "—Å–≤–æ–¥–Ω—ã–π –∞–Ω–∞–ª–∏–∑"
    
    if chart_buffer:
        # –û—Ç–ø—Ä–∞–≤–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        photo = BufferedInputFile(
            chart_buffer.read(),
            filename=f"{chart_type}_{movie_id}.png"
        )
        
        caption = f"üìä <b>{chart_name.title()}: {movie_analysis.movie_title}</b>\\n"
        caption += f"üìù –ù–∞ –æ—Å–Ω–æ–≤–µ {movie_analysis.total_reviews} –æ—Ç–∑—ã–≤–æ–≤\\n"
        caption += f"‚≠ê –°—Ä–µ–¥–Ω–∏–π —Ä–µ–π—Ç–∏–Ω–≥: {movie_analysis.avg_rating:.1f}/10"
        
        await message.answer_photo(photo=photo, caption=caption)
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –∏—Å—Ö–æ–¥–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        await message.edit_text(
            f"‚úÖ <b>{chart_name.title()} —Å–æ–∑–¥–∞–Ω!</b>\\n"
            f"üé¨ {movie_analysis.movie_title}\\n\\n"
            "üìä –ì—Ä–∞—Ñ–∏–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤—ã—à–µ"
        )
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –¥—Ä—É–≥–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="‚òÅÔ∏è –û–±–ª–∞–∫–æ —Å–ª–æ–≤", 
                    callback_data=f"wordcloud_{movie_id}"
                ),
                InlineKeyboardButton(
                    text="üìä –î—Ä—É–≥–æ–π –≥—Ä–∞—Ñ–∏–∫", 
                    callback_data=f"charts_{movie_id}"
                )
            ]
        ])
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏
        await message.answer(
            "üîÑ <b>–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:</b>", 
            reply_markup=keyboard
        )
    else:
        await message.edit_text(
            f"‚ùå <b>–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å {chart_name}</b>\\n"
            f"–§–∏–ª—å–º: {movie_analysis.movie_title}\\n\\n"
            "–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:\\n"
            "‚Ä¢ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏\\n"
            "‚Ä¢ –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã —Å –≥–µ–Ω–µ—Ä–∞—Ü–∏–µ–π\\n"
            "‚Ä¢ –ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ç–∏–ø –≥—Ä–∞—Ñ–∏–∫–∞"
        )

async def create_and_send_wordcloud(message: Message, movie_id: int):
    """–°–æ–∑–¥–∞–Ω–∏–µ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ –æ–±–ª–∞–∫–∞ —Å–ª–æ–≤."""
    config = get_config()
    sentiment_service = get_sentiment_service(config)
    viz_service = get_visualization_service(config)
    
    # –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Ñ–∏–ª—å–º–∞
    movie_analysis = sentiment_service.get_movie_sentiment_stats(movie_id)
    
    if not movie_analysis:
        await message.edit_text(
            f"üòî <b>–î–∞–Ω–Ω—ã–µ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ–±–ª–∞–∫–∞ —Å–ª–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</b>\\n"
            f"ID —Ñ–∏–ª—å–º–∞: {movie_id}"
        )
        return
    
    if not movie_analysis.reviews_sample:
        await message.edit_text(
            f"üòî <b>–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –æ—Ç–∑—ã–≤—ã</b>\\n"
            f"–§–∏–ª—å–º: {movie_analysis.movie_title}\\n\\n"
            "–î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ–±–ª–∞–∫–∞ —Å–ª–æ–≤ –Ω—É–∂–Ω—ã —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –æ—Ç–∑—ã–≤—ã"
        )
        return
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –æ–±–ª–∞–∫–∞ —Å–ª–æ–≤
    wordcloud_buffer = viz_service.create_wordcloud(
        movie_analysis.reviews_sample,
        movie_analysis.movie_title
    )
    
    if wordcloud_buffer:
        # –û—Ç–ø—Ä–∞–≤–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        photo = BufferedInputFile(
            wordcloud_buffer.read(),
            filename=f"wordcloud_{movie_id}.png"
        )
        
        caption = f"‚òÅÔ∏è <b>–û–±–ª–∞–∫–æ —Å–ª–æ–≤: {movie_analysis.movie_title}</b>\\n"
        caption += f"üìù –û—Å–Ω–æ–≤–∞–Ω–æ –Ω–∞ {len(movie_analysis.reviews_sample)} –æ—Ç–∑—ã–≤–∞—Ö\\n"
        caption += f"üìä –í—Å–µ–≥–æ –æ—Ç–∑—ã–≤–æ–≤ –≤ –∞–Ω–∞–ª–∏–∑–µ: {movie_analysis.total_reviews}"
        
        await message.answer_photo(photo=photo, caption=caption)
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –∏—Å—Ö–æ–¥–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        await message.edit_text(
            f"‚úÖ <b>–û–±–ª–∞–∫–æ —Å–ª–æ–≤ —Å–æ–∑–¥–∞–Ω–æ!</b>\\n"
            f"üé¨ {movie_analysis.movie_title}\\n\\n"
            "‚òÅÔ∏è –û–±–ª–∞–∫–æ —Å–ª–æ–≤ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤—ã—à–µ"
        )
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –¥—Ä—É–≥–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="üìä –ì—Ä–∞—Ñ–∏–∫–∏", 
                    callback_data=f"charts_{movie_id}"
                ),
                InlineKeyboardButton(
                    text="üìà –ê–Ω–∞–ª–∏–∑", 
                    callback_data=f"analyze_{movie_id}"
                )
            ]
        ])
        
        await message.answer(
            "üîÑ <b>–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:</b>", 
            reply_markup=keyboard
        )
    else:
        await message.edit_text(
            f"‚ùå <b>–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –æ–±–ª–∞–∫–æ —Å–ª–æ–≤</b>\\n"
            f"–§–∏–ª—å–º: {movie_analysis.movie_title}\\n\\n"
            "–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:\\n"
            "‚Ä¢ –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ wordcloud –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞\\n"
            "‚Ä¢ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Å–ª–æ–≤ –≤ –æ—Ç–∑—ã–≤–∞—Ö\\n"
            "‚Ä¢ –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã —Å –≥–µ–Ω–µ—Ä–∞—Ü–∏–µ–π"
        )

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≤—Å–µ—Ö —Ç–∏–ø–æ–≤ –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–π —Å—Ä–∞–∑—É
@visualization_router.message(Command("visualize"))
async def cmd_visualize_all(message: Message):
    """–°–æ–∑–¥–∞–Ω–∏–µ –≤—Å–µ—Ö —Ç–∏–ø–æ–≤ –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–ª—è —Ñ–∏–ª—å–º–∞."""
    command_parts = message.text.split()
    
    if len(command_parts) < 2:
        await message.answer(
            "‚ùå <b>–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã</b>\\n\\n"
            "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /visualize <ID —Ñ–∏–ª—å–º–∞>\\n"
            "–ü—Ä–∏–º–µ—Ä: /visualize 1318972\\n\\n"
            "–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —Å–æ–∑–¥–∞—Å—Ç –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –≥—Ä–∞—Ñ–∏–∫–∏ –∏ –æ–±–ª–∞–∫–æ —Å–ª–æ–≤."
        )
        return
    
    try:
        movie_id = int(command_parts[1])
    except ValueError:
        await message.answer("‚ùå ID —Ñ–∏–ª—å–º–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º")
        return
    
    logger.info(f"–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª–Ω–æ–π –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–ª—è —Ñ–∏–ª—å–º–∞ {movie_id}")
    
    # –°–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –ø—Ä–æ—Ü–µ—Å—Å–∞
    viz_msg = await message.answer(
        f"üé® <b>–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª–Ω–æ–π –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏</b>\\n"
        f"üé¨ –§–∏–ª—å–º ID: {movie_id}\\n\\n"
        "‚è≥ –°–æ–∑–¥–∞—é –≤—Å–µ —Ç–∏–ø—ã –≥—Ä–∞—Ñ–∏–∫–æ–≤ –∏ –æ–±–ª–∞–∫–æ —Å–ª–æ–≤...\\n"
        "<i>–≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –¥–æ 60 —Å–µ–∫—É–Ω–¥</i>\\n\\n"
        "üìä –ì—Ä–∞—Ñ–∏–∫–∏ –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –ø–æ –º–µ—Ä–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏"
    )
    
    try:
        # –°–æ–∑–¥–∞–µ–º –≤—Å–µ —Ç–∏–ø—ã –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ
        chart_types = ['sentiment', 'summary', 'wordcloud']
        
        for chart_type in chart_types:
            try:
                if chart_type == 'wordcloud':
                    await create_and_send_wordcloud(viz_msg, movie_id)
                else:
                    await create_and_send_chart(viz_msg, movie_id, chart_type)
                
                # –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –º–µ–∂–¥—É —Å–æ–∑–¥–∞–Ω–∏–µ–º –≥—Ä–∞—Ñ–∏–∫–æ–≤
                await asyncio.sleep(2)
                
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è {chart_type} –¥–ª—è {movie_id}: {e}")
                await message.answer(
                    f"‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è {chart_type}, –ø—Ä–æ–¥–æ–ª–∂–∞—é —Å –¥—Ä—É–≥–∏–º–∏..."
                )
        
        # –§–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        await viz_msg.edit_text(
            f"‚úÖ <b>–ü–æ–ª–Ω–∞—è –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!</b>\\n"
            f"üé¨ –§–∏–ª—å–º ID: {movie_id}\\n\\n"
            "üìä –í—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –≥—Ä–∞—Ñ–∏–∫–∏ –∏ –æ–±–ª–∞–∫–æ —Å–ª–æ–≤ —Å–æ–∑–¥–∞–Ω—ã"
        )
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–ª–Ω–æ–π –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–ª—è {movie_id}: {e}")
        await viz_msg.edit_text(
            f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏\\n"
            f"ID —Ñ–∏–ª—å–º–∞: {movie_id}\\n\\n"
            "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–æ–∑–¥–∞—Ç—å –≥—Ä–∞—Ñ–∏–∫–∏ –ø–æ –æ—Ç–¥–µ–ª—å–Ω–æ—Å—Ç–∏:\\n"
            "/chart {movie_id} sentiment\\n"
            "/wordcloud {movie_id}"
        )